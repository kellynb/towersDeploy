{"version":3,"sources":["Reducers/reducers.js","store.js","state.js","Components/GamePlay/GamePlayComponents/Column.js","Components/GamePlay/GamePlayComponents/WinColumn.js","Components/GamePlay/GamePlayComponents/Counter.js","Components/GamePlay/GamePlayComponents/HighScore.js","Components/GamePlay/GamePlayComponents/InstructButton.js","Components/GamePlay/GamePlayComponents/Instructions.js","Components/GamePlay/GamePlay.js","Functions/ValidMove.js","Components/StartForm/MatchOptions/MatchOptions.js","Components/StartForm/StartForm.js","App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","clicks","state","arguments","length","undefined","type","createStore","login","value","match","player","score","blockGrab","parentId","divVal","A","B","C","Column","color","id","changeStyleEnter","e","blockTarg","target","_this","props","setState","changeStyleExit","stopStyle","_this2","this","blockArr","block","react_default","a","createElement","className","concat","onClick","parentClick","onMouseEnter","onMouseOut","onMouseDown","style","backgroundColor","map","index","key","data-index","click","border","Component","WinColumn","blocks","alert","count","win","postNewScore","Counter","HighScore","InstructButton","handleInstructions","Instructions","view","instructions","aria-label","aria-hidden","GamePlay","GamePlayComponents_Counter","Math","floor","GamePlayComponents_HighScore","GamePlayComponents_InstructButton","GamePlayComponents_Instructions","GamePlayComponents_Column","keys","handleClick","GamePlayComponents_WinColumn","winState","ValidMove","val","parentTarg","childNodes","lastChild","MatchOptions","theMatch","handleMatch","StartForm","onSubmit","handleSubmit","onChange","handleChange","StartForm_MatchOptions_MatchOptions","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getData","preventDefault","fetch","headers","content-type","method","then","data","json","res","returnName","allScores","sort","b","createUser","name","body","JSON","stringify","targ","targId","parentDiv","parentNode","boardItem","grabBlock","assertThisInitialized","_this$setState","targParent","currentTarget","previousArr","newArr","pop","defineProperty","toConsumableArray","playerScore","getKeys","columnKeys","slice","Components_StartForm_StartForm","Components_GamePlay_GamePlay","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b76efc9.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\nconst clicks = (state=0, action) =>{\r\n    switch (action.type) {\r\n      case \"INCREASE_COUNTER\":\r\n        return state+1;\r\n      case \"ZERO_COUNTER\":\r\n        return state = 0;\r\n      case \"DECREASE_COUNTER\":\r\n        return state-1;\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nlet reducers = combineReducers({clicks})\r\n\r\nexport default reducers","import {createStore} from 'redux';\r\nimport state from './state'\r\nimport reducers from './Reducers/reducers'\r\n\r\nconst store = createStore(reducers, state);\r\n\r\nexport default store;","export default {\r\n      login: false,\r\n      value: \"\",\r\n      match: false,\r\n      player: \"\",\r\n      score: \"\",\r\n      clicks: 0,\r\n      blockGrab: '',\r\n      parentId: '',\r\n      divVal: '',\r\n      A: ['d', 'c', 'b', 'a'],\r\n      B: [],\r\n      C: []\r\n}","import React, {Component} from 'react';\r\nimport '../../../App.css';\r\n\r\nclass Column extends Component {\r\n    state = {\r\n        color: \"\",\r\n        id: \"\"\r\n    }\r\n\r\n    changeStyleEnter = (e) => {\r\n        const blockTarg = e.target.id\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"#202020\"})\r\n        } else {\r\n            this.setState({id: blockTarg})\r\n        }\r\n    }\r\n\r\n    changeStyleExit = () => {\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"\"})\r\n        } else {\r\n            this.setState({id: \"\"})\r\n        }\r\n    }\r\n\r\n    stopStyle = (e) => {\r\n        const blockTarg = e.target.id\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"\"})\r\n        } else {\r\n            this.setState({id: blockTarg})\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const blockArr = this.props.block;\r\n        \r\n        \r\n        return (\r\n            <div className=\"Column1\" id={`${this.props.id}`} \r\n                onClick={this.props.parentClick}\r\n                onMouseEnter={this.changeStyleEnter}\r\n                onMouseOut={this.changeStyleExit}\r\n                onMouseDown={(e) => this.stopStyle(e)}\r\n                style={{backgroundColor: this.state.color}}\r\n                >\r\n                {blockArr.length > 0 \r\n                    ? blockArr.map( (block,index) => \r\n                            <div id={block} \r\n                                key={block} \r\n                                data-index={index} \r\n                                onClick={this.props.click}\r\n                                onMouseEnter={(e) => this.changeStyleEnter(e)}\r\n                                onMouseOut={(e) => this.changeStyleExit(e)}\r\n                                onMouseDown={(e) => this.stopStyle(e)} \r\n                                style={{border: block === this.state.id ? \"white solid 4px\" : \"\"}}\r\n                                >\r\n                            </div>)\r\n                    : null \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n  export default Column;","import React, {Component} from 'react';\r\nimport '../../../App.css';\r\n\r\n\r\nclass WinColumn extends Component {\r\n    state = {\r\n        color: \"\",\r\n        id: \"\"\r\n    }\r\n\r\n    changeStyleEnter = (e) => {\r\n        const blockTarg = e.target.id\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"#202020\"})\r\n        } else {\r\n            this.setState({id: blockTarg})\r\n        }\r\n    }\r\n\r\n    changeStyleExit = () => {\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"\"})\r\n        } else {\r\n            this.setState({id: \"\"})\r\n        }\r\n    }\r\n\r\n    stopStyle = (e) => {\r\n        const blockTarg = e.target.id\r\n        if(this.props.clicks % 2 === 1){\r\n            this.setState({color: \"\"})\r\n        } else {\r\n            this.setState({id: blockTarg})\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const blockArr = this.props.block;\r\n        let blocks = null;\r\n\r\n\r\n        if (blockArr.length > 0 && blockArr.length < 4) {\r\n            blocks = blockArr.map((block, index) => \r\n                <div id={block} \r\n                     key={block} \r\n                     data-index={index} \r\n                     onClick={this.props.click}\r\n                     onMouseEnter={(e) => this.changeStyleEnter(e)}\r\n                     onMouseOut={(e) => this.changeStyleExit(e)} \r\n                     onMouseDown={(e) => this.stopStyle(e)} \r\n                     style={{border: block === this.state.id ? \"white solid 4px\" : \"\"}}>\r\n                </div>)\r\n        } else if (blockArr.length === 4) {\r\n            alert(`Winner Winner. It took ${this.props.count} moves`);\r\n            this.props.win();\r\n            this.props.postNewScore();\r\n        } else {\r\n            blocks = null\r\n        }\r\n\r\n        return (\r\n            <div className=\"Column1\" id='C' \r\n                onClick={this.props.parentClick}\r\n                onMouseEnter={(e) => this.changeStyleEnter(e)}\r\n                onMouseOut={(e) => this.changeStyleExit(e)}\r\n                onMouseDown={(e) => this.stopStyle(e)}\r\n                style={{backgroundColor: this.state.color}}\r\n                >\r\n                {blocks}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\n  export default WinColumn;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n        <div id=\"counter\"> Current Score: {props.count}</div>\r\n    )\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\n\r\nconst HighScore = (props) => {\r\n    return (\r\n        <div id=\"highscore\">Best Score: {props.score}</div>\r\n    )\r\n}\r\n\r\nexport default HighScore;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst InstructButton = (props) => {\r\n\r\n    return (\r\n        <button onClick={props.handleInstructions}>Instructions</button>\r\n    )\r\n}\r\n\r\nexport default InstructButton;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst Instructions = (props) => {\r\n\r\n    let view = null;\r\n\r\n    if (props.instructions) {\r\n        view = \r\n        <section id=\"instructions\">\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={props.handleInstructions}>\r\n                <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n            <ol>\r\n                <li> Click on a block to select block</li>\r\n                <li> Then click on a column to move block</li>\r\n                <li> Block will only move if its smaller than the block it stacks on top</li>\r\n                <li> If you click the same column the block is in, you restart the move</li>\r\n                <li> Get all blocks in the far right column. Try to do so in the least amount of moves</li>\r\n            </ol>\r\n        </section>\r\n    }\r\n            \r\n    return (\r\n       view \r\n    )\r\n}\r\n\r\nexport default Instructions;","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Column from './GamePlayComponents/Column';\r\nimport WinColumn from './GamePlayComponents/WinColumn';\r\nimport Counter from './GamePlayComponents/Counter';\r\nimport HighScore from './GamePlayComponents/HighScore';\r\nimport InstructButton from './GamePlayComponents/InstructButton';\r\nimport Instructions from './GamePlayComponents/Instructions';\r\n\r\nclass GamePlay extends Component {\r\n    state = {\r\n        instructions: false,\r\n    }\r\n\r\n    handleInstructions = () => {\r\n        this.setState({instructions: !this.state.instructions})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div> \r\n                <section id =\"gameData\">\r\n                    <h2>Give it your best {this.props.player}</h2>\r\n                    <div id=\"scoreBoard\">\r\n                        <Counter count={Math.floor(this.props.clicks/2)} />\r\n                        <HighScore score={this.props.score}/>\r\n                        <InstructButton handleInstructions={this.handleInstructions} />\r\n                    </div>\r\n                    <Instructions handleInstructions={this.handleInstructions} instructions={this.state.instructions} />\r\n                </section>\r\n                <div id=\"columnView\">\r\n                    <Column \r\n                        id = {this.props.keys[0]}\r\n                        block={this.props.A} \r\n                        click={this.props.handleClick} \r\n                        parentClick ={this.props.parentClick} \r\n                        clicks={this.props.clicks}\r\n                        />\r\n                    <Column\r\n                        id = {this.props.keys[1]}\r\n                        block={this.props.B} \r\n                        click={this.props.handleClick} \r\n                        parentClick ={this.props.parentClick}\r\n                        clicks={this.props.clicks}\r\n                         />\r\n                    <WinColumn \r\n                        block={this.props.C} \r\n                        click={this.props.handleClick} \r\n                        parentClick ={this.props.parentClick}\r\n                        clicks={this.props.clicks} \r\n                        win={this.props.winState} \r\n                        postNewScore = {this.props.postNewScore}\r\n                        count={Math.floor(this.props.clicks/2)} \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamePlay;","\r\nconst ValidMove = (val, props) => {\r\n    const parentTarg = val.target.id;\r\n    if (parentTarg === \"A\" || parentTarg === \"B\" || parentTarg === \"C\") {\r\n        const childNodes = val.target.childNodes;\r\n      if(childNodes.length !== 0) {\r\n        const childVal = val.target.lastChild.id;\r\n        return childVal > props.state.divVal \r\n       } else {\r\n         return true\r\n       }\r\n    }    \r\n    \r\n}\r\n\r\n  export default ValidMove;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst MatchOptions = (props) => {\r\n    let theMatch = null;\r\n\r\n    if (props.match) {\r\n        theMatch = \r\n        <div id='match'>\r\n            <p> Hello {props.player}. To continue as this {props.player} press continue, else enter a new user name</p>\r\n            <button onClick={props.handleMatch} id='playerbutton'>Continue</button>\r\n        </div>\r\n    }\r\n    return (\r\n        theMatch\r\n    )\r\n}\r\n\r\nexport default MatchOptions;","import React from 'react';\r\nimport MatchOptions from './MatchOptions/MatchOptions';\r\nimport '../../App.css';\r\n\r\n\r\nconst StartForm = (props) => {\r\n    \r\n    return (\r\n            <div id=\"login\">\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <label>Name : \r\n                        <input id=\"formtext\" type=\"text\" value={props.value} onChange={props.handleChange} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>\r\n                <MatchOptions handleMatch={props.handleMatch} match={props.match} player={props.player}/>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default StartForm;","import React, { Component } from 'react';\nimport './App.css';\nimport Gameplay from './Components/GamePlay/GamePlay'\nimport ValidMove from './Functions/ValidMove';\nimport StartForm from './Components/StartForm/StartForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      value: \"\",\n      match: false,\n      player: \"\",\n      score: \"\",\n      clicks: 0,\n      blockGrab: '',\n      parentId: '',\n      divVal: '',\n      A: ['d', 'c', 'b', 'a'],\n      B: [],\n      C: []  \n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({value: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    this.setState({\n      player: this.state.value,\n      value: \"\"\n      }, () => {\n        if(this.state.player) {\n          this.getData();\n        };\n    })\n    e.preventDefault();\n  }\n\n  getData = () => {\n    fetch(`/${this.state.player}`, {\n      headers: {\n              'content-type': 'application/json'\n              },\n      method: 'GET'\n    })\n      .then(data => data.json())\n      .then(res => {\n          const returnName = res[0];\n          if (returnName) {\n            if (returnName.score) {\n              const allScores = returnName.score;\n              allScores.sort((a,b) => a-b);\n              this.setState({\n                score: allScores[0]\n              })\n            }\n            this.setState({\n              match: true\n            })\n          } else {\n            this.createUser();\n          }\n      })\n  }\n\n  createUser = () => {\n    const player = this.state.player;\n    \n    const name = {name : player};\n    fetch(`/${player}`, {\n      headers: {\n              'content-type': 'application/json'\n              },\n      method: 'POST',\n      body: JSON.stringify(name)\n    })\n      .then( () => {\n          return this.setState({\n            login: true,\n            score: \"\"\n          })\n    })\n  }\n\n  handleMatch = () => {\n    this.setState({login: true})\n  }\n\n  handleClick = (e) => {\n    if (this.state.clicks %2 === 0) {\n      const targ = e.target;\n      const targId = e.target.id;\n      const parentDiv = targ.parentNode.id;\n      const boardItem = this.state[parentDiv];\n      const grabBlock = boardItem[boardItem.length-1];\n\n      if (targId === grabBlock) {\n        this.setState({blockGrab: grabBlock,\n                      clicks: this.state.clicks+1,\n                      parentId: parentDiv,\n                      divVal: targId\n                      });\n      }\n    }\n  }\n\n  parentClick = (e) => {\n    if (this.state.clicks % 2 === 1) {\n      if (ValidMove(e, this)) {\n        const targId = e.target.id;\n        const targParent = e.currentTarget.id;\n        const previousArr = this.state.parentId;\n        const newArr = this.state[previousArr];\n        if (targParent !== previousArr) {\n          newArr.pop();\n          this.setState({[previousArr]: newArr,\n                        [targId]: [...this.state[targId], this.state.blockGrab],\n                        clicks: this.state.clicks +1,\n                        })             \n          }\n      } else {\n        this.setState({\n            blockGrab: \"\",\n            clicks: this.state.clicks-1,\n            parentId: \"\",\n            divVal: \"\"\n        })\n      }\n    }   \n  }\n\n  winState = () => {\n    this.setState({ \n      clicks: 0,\n      blockGrab: '',\n      parentId: '', \n      A: ['d', 'c', 'b', 'a'],\n      B: [],\n      C: []\n    })  \n  }\n\n  postNewScore = () => {\n    const playerScore = {\n      player: this.state.player,\n      score: Math.floor(this.state.clicks/2)\n    };\n\n    fetch(`/${this.state.player}/${Math.floor(this.state.clicks/2)}`, {\n        headers: {\n                'content-type': 'application/json'\n                },\n        method: 'PUT',\n        body: JSON.stringify(playerScore)\n      })  \n        .then(data => data.json())\n        .then(res => {\n           this.setState({score: res}); \n      })\n  }\n\n  render() {\n    const getKeys = Object.keys(this.state);\n    const columnKeys = getKeys.slice(9,getKeys.length)\n    \n    return (\n      <div className=\"App\">\n        {!this.state.login ? \n          <StartForm \n            match={this.state.match} \n            handleMatch={this.handleMatch} \n            handleChange={this.handleChange} \n            handleSubmit={this.handleSubmit} \n            value={this.state.value}\n            player={this.state.player} \n          /> \n        : null}\n        <section id=\"title\">\n          <h1>TOWERS OF HANOI</h1>\n        </section>\n        {this.state.login ? \n          <Gameplay\n            keys={columnKeys}\n            player= {this.state.player}\n            score = {this.state.score}\n            clicks = {this.state.clicks}\n            postNewScore={() => this.postNewScore()}\n            winState = {() => this.winState()}\n            parentClick = {(e) => this.parentClick(e)}\n            handleClick= {(e) => this.handleClick(e)}\n            A = {this.state.A} \n            B = {this.state.B}\n            C = {this.state.C}\n             /> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/> , document.getElementById('root'));\n    \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}